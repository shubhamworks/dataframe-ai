{% for df in context["dfs"] -%}
dfs[{{ loop.index0 }}]: {{ df.shape[0] }}x{{ df.shape[1] }}
sample dataframe - {{df.sample(n=3).to_csv(index=False)}}
{% endfor %}
{% if context["fn_tools"]|length > 0 %}
You are already provided with the following functions that you can call directly:
Functions:
{% endif %}
{% for fn_tool in context["fn_tools"] %}
{{fn_tool}}
{% endfor %}

Based on the above pandas dataframes and functions, write a python code for the query - {{query}}

Update this python code:
```py
import pandas as pd

# Write code here

# Declare result var: 
type (possible values "string", "number", "dataframe", "plot"). Examples: { "type": "string", "value": f"The highest salary is {highest_salary}."} or { "type": "number", "value": 125 } or { "type": "dataframe", "value": pd.DataFrame({...}) } or { "type": "plot", "value": "temp_chart.png" }
```

Rules:
- Variable `dfs: List[pd.DataFrame]` is already declared.
- At the end, declare "result" variable as a dictionary of type and value.
- Do not write the defintion for provided functions, directly use it into the code